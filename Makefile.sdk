LDFLAGS=
CFLAGS=
CPPFLAGS=
CC=
CPP=
AS=
AR=
LD=
NM=

LOCAL_PATH=$(PWD)

EXTRA_OEMAKE=CROSS_COMPILE=arm-ostl-linux-gnueabi- PLAT=stm32mp1 ARCH=aarch32 ARM_ARCH_MAJOR=7 DEBUG=1 LOG_LEVEL=40

ELF_DEBUG_ENABLE ?= 1
TF_A_CONFIG ?=  trusted optee trusted trusted

TF_A_CONFIG_OEMAKE =  trusted,"AARCH32_SP=sp_min" optee,"AARCH32_SP=optee STM32MP_BOOT_ONLY=1" trusted,"AARCH32_SP=sp_min" trusted,"AARCH32_SP=sp_min"
TFA_DEVICETREE ?=   stm32mp157a-dk1 stm32mp157c-dk2   stm32mp157c-ed1   stm32mp157c-ev1 

help:
	@echo
	@echo "Available targets:"
	@echo "  all   : build TF-A binaries for defined config(s)"
	@echo "  clean : clean build directories from generated files"
	@echo
	@echo "TF-A configuration:"
	@echo "  TF_A_CONFIG = $(TF_A_CONFIG)"
	@echo "  TFA_DEVICETREE = $(TFA_DEVICETREE)"
	@echo "  ELF_DEBUG_ENABLE = '$(ELF_DEBUG_ENABLE)' ('1' to export elf files)"
	@echo

all: tf

host_tools:
	@$(MAKE) --no-print-directory -C $(LOCAL_PATH)/tools/stm32image

tf: host_tools
	for config in $(TF_A_CONFIG) ; do \
		add_extraoemake= ; \
		for fullconfig in $(TF_A_CONFIG_OEMAKE) ; do \
			extraconfig=$$(echo $$fullconfig | cut -d',' -f1) ; \
			if [ "$$extraconfig" = "$$config" ]; then \
				add_extraoemake=$$(echo $$fullconfig | cut -d',' -f2) ; \
			fi ; \
		done ; \
		mkdir -p $(LOCAL_PATH)/build/$$config ; \
		if test -n "$(TFA_DEVICETREE)" ; then \
			for dt in $(TFA_DEVICETREE) ; do \
				$(MAKE) $(EXTRA_OEMAKE) -C $(LOCAL_PATH) DTB_FILE_NAME=$$dt.dtb BUILD_PLAT=$(LOCAL_PATH)/build/$$config $$add_extraoemake; \
				cp -f $(LOCAL_PATH)/build/$$config/tf-a-$$dt.stm32 $(LOCAL_PATH)/build/$$config/tf-a-$$dt-$$config.stm32 ; \
			done ; \
		else \
			$(MAKE) $(EXTRA_OEMAKE) -C $(LOCAL_PATH) BUILD_PLAT=$(LOCAL_PATH)/build/$$config $$add_extraoemake; \
			tf_version=$$(find $(LOCAL_PATH)/build/$$config -name tf-a*.stm32 -exec basename {} \; | sed "s/\.stm32//") ; \
			cp -f $(LOCAL_PATH)/build/$$config/$$tf_version.stm32 $(LOCAL_PATH)/build/$$config/$$tf_version-$$config.stm32 ; \
		fi ; \
		if [ "$(ELF_DEBUG_ENABLE)" = "1" ] ; then \
			if [ -f $(LOCAL_PATH)/build/$$config/bl1/bl1.elf ] ; then \
				cp -f $(LOCAL_PATH)/build/$$config/bl1/bl1.elf $(LOCAL_PATH)/build/$$config/tf-a-bl1-$$config.elf ; \
			fi ; \
			if [ -f $(LOCAL_PATH)/build/$$config/bl2/bl2.elf ] ; then \
				cp -f $(LOCAL_PATH)/build/$$config/bl2/bl2.elf $(LOCAL_PATH)/build/$$config/tf-a-bl2-$$config.elf ; \
			fi ; \
			if [ -f $(LOCAL_PATH)/build/$$config/bl32/bl32.elf ] ; then \
				cp -f $(LOCAL_PATH)/build/$$config/bl32/bl32.elf $(LOCAL_PATH)/build/$$config/tf-a-bl32-$$config.elf ; \
			fi ; \
		fi ; \
	done

clean:
	@for config in $(TF_A_CONFIG) ; do \
		rm -rf $(LOCAL_PATH)/build/$$config ; \
	done